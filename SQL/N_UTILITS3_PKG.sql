--------------------------------------------------------
--  DDL for Package N_UTILITS3
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "REPORTS"."N_UTILITS3" AS 

  --Сбор кубов второго типа с блекджеком и мерджами

  TYPE T_SUB_EXPRESSION IS RECORD(
    CODE NUMBER,
    FIRST_IND NUMBER,
    SECOND_IND NUMBER,
    OPER VARCHAR2(1),
    FORMULA VARCHAR2(1000),
    SQL_QUERY CLOB);
    
  TYPE T_SUB_EXPRESS_ARR IS TABLE OF T_SUB_EXPRESSION
  INDEX BY BINARY_INTEGER;  

  TYPE T_FIELDS IS TABLE OF VARCHAR2(40)
  INDEX BY BINARY_INTEGER;
  
  TYPE SOURCE_INFO IS RECORD(
    SOURCE_TABLE CLOB,
    SOURCE_SQL CLOB,
    SOURCE_TYPE NUMBER); -- 1=TABLE;2=QUERY
  
  TYPE INDICATOR_INFO IS RECORD(
      INDICATOR_ID NUMBER,
      IND_FIELDS T_FIELDS,
      IND_SOURCE SOURCE_INFO); 
      
  TYPE T_INDICATORS IS TABLE OF INDICATOR_INFO
    INDEX BY BINARY_INTEGER;    
  
  TYPE REPORT_PARAM IS RECORD(
    NAME VARCHAR2(100),
    TYPE VARCHAR2(100),
    VALUE VARCHAR2(100));
    
  TYPE REPORT_PARAM_ARRAY IS TABLE OF REPORT_PARAM
    INDEX BY BINARY_INTEGER;
    
  TYPE T_TABLE IS RECORD(
      TABLE_NAME VARCHAR2(40),
      TABLE_FIELDS T_FIELDS);
  TYPE T_TABLES IS TABLE OF T_TABLE
  INDEX BY BINARY_INTEGER;  
  
  FUNCTION CHECK_DIMENSION_FLAG(V_TABLE_NAME IN VARCHAR2, V_DIM_FLAG IN VARCHAR2) RETURN BOOLEAN;
  --Собирает составные условия
  FUNCTION FORMATE_CONDITION_SQL (V_VERSION_DATE IN DATE, inExpression in varchar2, cond_level in number := -1) RETURN VARCHAR2;
  --Возвращает запрос для загрузки показателя в куб второго типа
  FUNCTION GET_INDICATOR_QUERY (V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2, V_INDICATOR_ID IN NUMBER) RETURN CLOB;
  PROCEDURE CALCULATE_FORMULA_INDICATORS(V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2);
  --PROCEDURE LOAD_CUBE_2LVL_NEW (V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2);
  --Загружает все показатели в куб второго типа
  FUNCTION GET_PARAMS_QUERY (V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2) RETURN CLOB;
  PROCEDURE LOAD_CUBE_2LVL(V_VERSION_DATE IN DATE, V_TABLE_NAME VARCHAR2);
  FUNCTION GET_MERGE_QUERY(V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2, V_INDICATOR_ID IN NUMBER) RETURN CLOB;
  PROCEDURE LOAD_PARAMS(V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2);
  PROCEDURE LOAD_CUBE_2LVL_INDICATOR(V_VERSION_DATE IN DATE, V_TABLE_NAME VARCHAR2, V_INDICATOR_ID IN NUMBER);
  FUNCTION GET_NOTNULL_ROWS_COUNT(V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2) RETURN NUMBER;
  PROCEDURE LOAD_FLAGS(V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2);

  
  
  FUNCTION CHECK_DATA(V_VERSION_DATE IN DATE, V_TABLE_NAME IN VARCHAR2) RETURN BOOLEAN;
  
--  PROCEDURE UPDATE_S_BLOCK_ATTRS;

END N_UTILITS3;

/
